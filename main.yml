---
- name: Play - Setup Jenkins Server
  hosts: all
  vars_files:
    - ./vars/vars.yml
    - ./vars/secrets.yml
  become: true

  pre_tasks:
    - debug: var=ansible_os_family
    - name: Load OS specific Vars file
      include_vars: "{{ item }}"
      with_first_found:
        - "./vars/os_specific_{{ ansible_os_family }}.yml"
        - "./vars/os_specific_default.yml"

    - name: Gather the installed package facts
      ansible.builtin.package_facts:
        manager: auto      
      when: ansible_os_family == "RedHat"

    - name: Stop and disable Firewalld service
      service:
        name: firewalld
        state: stopped
        enabled: false
      when: ansible_os_family == "RedHat" and "'firewalld' in ansible_facts.packages"

  roles:
    - role: geerlingguy.ntp
    - role: geerlingguy.java
    - role: geerlingguy.docker
    - role: geerlingguy.git
    - role: geerlingguy.ansible
    - role: geerlingguy.jenkins

  tasks:

    - name: Install Jenkins-Host-System packages
      package:
        name:
          - git
        state: present
      become: true

    - name: Modify user 'Jenkins' to add group 'docker'
      ansible.builtin.user:
        name: jenkins
        groups: docker
        append: yes
      become: true

    - name: Stop service Jenkins if started
      ansible.builtin.service:
        name: jenkins
        state: stopped
      become: true
      when: jk_restore_backup

    - name: Create /tmp/downloads directory
      ansible.builtin.file:
        state: directory
        path: /tmp/downloads
      become: true
      when: jk_restore_backup

    - name: Download the backup file
      copy:
        remote_src: false      
        src: "{{ jk_backup_host_folder }}/{{ jk_backup_tar_gz }}"
        dest: "/tmp/downloads/{{ jk_backup_tar_gz }}"
      become: true
      when: jk_restore_backup

    - name: Delete Jenkins directory
      ansible.builtin.file:
        state: absent
        path: "{{ jenkins_home }}"
      become: true
      when: jk_restore_backup

    - name: Recreate Jenkins directory
      ansible.builtin.file:
        state: directory
        path: "{{ jenkins_home }}"
      become: true
      when: jk_restore_backup

    - name: Extract old Jenkins backup into jenkins_home
      ansible.builtin.unarchive:
        remote_src: true
        src: "/tmp/downloads/{{ jk_backup_tar_gz }}"
        dest: "{{ jenkins_home }}/"
      become: true
      when: jk_restore_backup

    - name: Change ownership of the /var/lib/jenkins back to jenkins:jenkins
      file:
        state : directory
        recurse : yes
        path : "{{ jenkins_home }}"
        owner: jenkins
        group: jenkins
      become: true
      when: jk_restore_backup

    - name: Delete /tmp/downloads directory
      ansible.builtin.file:
        state: absent
        path: /tmp/downloads
      become: true
      when: jk_restore_backup
 
